;; a few example nop instructions
nop
nop

;; play around with moving stuff
mov  0x03E8  0x03F0
mov (0x00FF) 0x03F8

;; print raw ascii stuff
:hello
outr (0x48) ;; H
outr (0x65) ;; e
outr (0x6C) ;; l
outr (0x6C) ;; l
outr (0x6F) ;; o
outr (0x20) ;;
outr (0x77) ;; w
outr (0x6F) ;; o
outr (0x72) ;; r
outr (0x6C) ;; l
outr (0x64) ;; d

;; This is the newline character, but is demonstrating writing from memory
mov (0x0A) 0x0400
outr 0x0400

;; Now we demonstrate some math here
mov (0x01) 0x03F0
add (0x01) (0x02) 0x03F8
add 0x03F0 0x03F8 0x03F0
mov (0x05) 0x0400
sub (0x05) (0x04) 0x0408
sub 0x0400 0x0408 0x0400

jmp :main

:hello_there
outr (0x64) ;; d
outr (0x6C) ;; l
outr (0x72) ;; r
outr (0x6F) ;; o
outr (0x77) ;; w
outr (0x20) ;;
outr (0x6F) ;; o
outr (0x6C) ;; l
outr (0x6C) ;; l
outr (0x65) ;; e
outr (0x48) ;; H
outr (0x0A) ;; \n
return

:main
call :hello_there
call :hello_there
call :hello_there
call :hello_there
call :hello_there
call :hello_there

:inf_loop
jmp :inf_loop

end